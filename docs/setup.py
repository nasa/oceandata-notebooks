# /// script
# requires-python = ">=3.11"
# dependencies = [
#     "affine==2.4.0",
#     "aiobotocore==2.22.0",
#     "aiohappyeyeballs==2.6.1",
#     "aiohttp==3.11.18",
#     "aioitertools==0.12.0",
#     "aiosignal==1.3.2",
#     "appnope==0.1.4",
#     "asttokens==3.0.0",
#     "attrs==25.1.0",
#     "bash-kernel==0.10.0",
#     "bleach==6.2.0",
#     "bokeh==3.7.3",
#     "botocore==1.37.3",
#     "bounded-pool-executor==0.0.3",
#     "cartopy==0.24.1",
#     "certifi==2024.12.14",
#     "cf-xarray==0.10.5",
#     "cftime==1.6.4.post1",
#     "charset-normalizer==3.4.1",
#     "click==8.2.1",
#     "click-plugins==1.1.1",
#     "cligj==0.7.2",
#     "cloudpickle==3.1.1",
#     "cmocean==4.0.3",
#     "colorcet==3.1.0",
#     "comm==0.2.2",
#     "contourpy==1.3.2",
#     "cycler==0.12.1",
#     "dask==2025.7.0",
#     "datashader==0.18.1",
#     "debugpy==1.8.12",
#     "decorator==5.1.1",
#     "distributed==2025.7.0",
#     "earthaccess==0.14.0",
#     "executing==2.1.0",
#     "filelock==3.18.0",
#     "fonttools==4.58.0",
#     "frozenlist==1.6.0",
#     "fsspec==2025.7.0",
#     "h5netcdf==1.6.1",
#     "h5py==3.13.0",
#     "holoviews==1.20.2",
#     "hvplot==0.11.3",
#     "idna==3.10",
#     "importlib-resources==6.5.2",
#     "ipykernel==6.29.5",
#     "ipython==8.32.0",
#     "ipywidgets==8.1.5",
#     "jedi==0.19.2",
#     "jinja2==3.1.5",
#     "jmespath==1.0.1",
#     "jupyter-client==8.6.3",
#     "jupyter-core==5.7.2",
#     "jupyterlab-widgets==3.0.13",
#     "kiwisolver==1.4.8",
#     "linkify-it-py==2.0.3",
#     "llvmlite==0.44.0",
#     "locket==1.0.0",
#     "markdown==3.8",
#     "markdown-it-py==3.0.0",
#     "markupsafe==3.0.2",
#     "matplotlib==3.10.3",
#     "matplotlib-inline==0.1.7",
#     "mdit-py-plugins==0.4.2",
#     "mdurl==0.1.2",
#     "mpmath==1.3.0",
#     "msgpack==1.1.1",
#     "multidict==6.4.3",
#     "multimethod==2.0",
#     "multipledispatch==1.0.0",
#     "nest-asyncio==1.6.0",
#     "netcdf4==1.7.2",
#     "networkx==3.4.2",
#     "numba==0.61.2",
#     "numpy==2.2.6",
#     "packaging==24.2",
#     "pandas==2.3.1",
#     "panel==1.6.3",
#     "param==2.2.0",
#     "parso==0.8.4",
#     "partd==1.4.2",
#     "pexpect==4.9.0",
#     "pillow==11.3.0",
#     "platformdirs==4.3.6",
#     "pqdm==0.2.0",
#     "prompt-toolkit==3.0.50",
#     "psutil==5.9.8",
#     "ptyprocess==0.7.0",
#     "pure-eval==0.2.3",
#     "pvlib==0.12.0",
#     "pyct==0.5.0",
#     "pygments==2.19.1",
#     "pyparsing==3.2.3",
#     "pyproj==3.7.1",
#     "pyshp==2.3.1",
#     "python-cmr==0.13.0",
#     "python-dateutil==2.9.0.post0",
#     "pytz==2025.1",
#     "pyviz-comms==3.0.4",
#     "pyyaml==6.0.2",
#     "pyzmq==26.2.1",
#     "rasterio==1.4.3",
#     "requests==2.32.3",
#     "s3fs==2025.7.0",
#     "scipy==1.15.3",
#     "seaborn==0.13.2",
#     "setuptools==75.8.0",
#     "shapely==2.1.0",
#     "six==1.17.0",
#     "sortedcontainers==2.4.0",
#     "stack-data==0.6.3",
#     "sympy==1.14.0",
#     "tblib==3.1.0",
#     "tinynetrc==1.3.1",
#     "toolz==1.0.0",
#     "torch==2.7.1+cu128",
#     "tornado==6.4.2",
#     "tqdm==4.67.1",
#     "traitlets==5.14.3",
#     "typing-extensions==4.12.2",
#     "tzdata==2025.2",
#     "uc-micro-py==1.0.3",
#     "urllib3==2.3.0",
#     "wcwidth==0.2.13",
#     "webencodings==0.5.1",
#     "widgetsnbextension==4.0.13",
#     "wrapt==1.17.2",
#     "xarray==2025.7.1",
#     "xyzservices==2025.4.0",
#     "yarl==1.20.0",
#     "zict==3.0.0",
#     "importlib-metadata==8.6.1",
#     "nvidia-cublas-cu12==12.8.3.14",
#     "nvidia-cuda-cupti-cu12==12.8.57",
#     "nvidia-cuda-nvrtc-cu12==12.8.61",
#     "nvidia-cuda-runtime-cu12==12.8.57",
#     "nvidia-cudnn-cu12==9.7.1.26",
#     "nvidia-cufft-cu12==11.3.3.41",
#     "nvidia-cufile-cu12==1.13.0.11",
#     "nvidia-curand-cu12==10.3.9.55",
#     "nvidia-cusolver-cu12==11.7.2.55",
#     "nvidia-cusparse-cu12==12.5.7.53",
#     "nvidia-cusparselt-cu12==0.6.3",
#     "nvidia-nccl-cu12==2.26.2",
#     "nvidia-nvjitlink-cu12==12.8.61",
#     "nvidia-nvtx-cu12==12.8.55",
#     "rioxarray==0.19.0",
#     "triton==3.3.1",
#     "zipp==3.21.0",
#     "accessible-pygments==0.0.5",
#     "alabaster==0.7.16",
#     "appnope==0.1.4 ; sys_platform == 'darwin'",
#     "async-timeout==5.0.1 ; python_full_version < '3.11'",
#     "babel==2.17.0",
#     "beautifulsoup4==4.13.3",
#     "cffi==1.17.1 ; implementation_name == 'pypy'",
#     "cfgv==3.4.0",
#     "colorama==0.4.6 ; sys_platform == 'win32'",
#     "distlib==0.3.9",
#     "docutils==0.21.2",
#     "exceptiongroup==1.2.2 ; python_full_version < '3.11'",
#     "fastjsonschema==2.21.1",
#     "filetype==1.2.0",
#     "greenlet==3.1.1 ; (python_full_version < '3.14' and platform_machine == 'AMD64') or (python_full_version < '3.14' and platform_machine == 'WIN32') or (python_full_version < '3.14' and platform_machine == 'aarch64') or (python_full_version < '3.14' and platform_machine == 'amd64') or (python_full_version < '3.14' and platform_machine == 'ppc64le') or (python_full_version < '3.14' and platform_machine == 'win32') or (python_full_version < '3.14' and platform_machine == 'x86_64')",
#     "identify==2.6.10",
#     "imagesize==1.4.1",
#     "jsonschema==4.23.0",
#     "jsonschema-specifications==2024.10.1",
#     "jupyter-book==1.0.4.post1",
#     "jupyter-cache==1.0.1",
#     "jupytext==1.17.2",
#     "latexcodec==3.0.0",
#     "myst-nb==1.2.0",
#     "myst-parser==3.0.1",
#     "narwhals==1.48.0",
#     "nbclient==0.10.2",
#     "nbformat==5.10.4",
#     "nodeenv==1.9.1",
#     "nvidia-cublas-cu12==12.8.3.14 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-cuda-cupti-cu12==12.8.57 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-cuda-nvrtc-cu12==12.8.61 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-cuda-runtime-cu12==12.8.57 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-cudnn-cu12==9.7.1.26 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-cufft-cu12==11.3.3.41 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-cufile-cu12==1.13.0.11 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-curand-cu12==10.3.9.55 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-cusolver-cu12==11.7.2.55 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-cusparse-cu12==12.5.7.53 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-cusparselt-cu12==0.6.3 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-nccl-cu12==2.26.2 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-nvjitlink-cu12==12.8.61 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "nvidia-nvtx-cu12==12.8.55 ; platform_machine == 'x86_64' and sys_platform == 'linux'",
#     "pre-commit==4.2.0",
#     "propcache==0.3.1",
#     "pybtex==0.24.0",
#     "pybtex-docutils==1.0.3",
#     "pycparser==2.22 ; implementation_name == 'pypy'",
#     "pydata-sphinx-theme==0.15.4",
#     "pywin32==310 ; platform_python_implementation != 'PyPy' and sys_platform == 'win32'",
#     "referencing==0.36.2",
#     "rpds-py==0.22.3",
#     "ruff==0.11.9",
#     "snowballstemmer==3.0.1",
#     "soupsieve==2.5",
#     "sphinx==7.4.7",
#     "sphinx-book-theme==1.1.4",
#     "sphinx-comments==0.0.3",
#     "sphinx-copybutton==0.5.2",
#     "sphinx-design==0.6.1",
#     "sphinx-external-toc==1.0.1",
#     "sphinx-jupyterbook-latex==1.0.0",
#     "sphinx-multitoc-numbering==0.1.3",
#     "sphinx-thebe==0.3.1",
#     "sphinx-togglebutton==0.3.2",
#     "sphinxcontrib-applehelp==2.0.0",
#     "sphinxcontrib-bibtex==2.6.3",
#     "sphinxcontrib-devhelp==2.0.0",
#     "sphinxcontrib-htmlhelp==2.1.0",
#     "sphinxcontrib-jsmath==1.0.1",
#     "sphinxcontrib-qthelp==2.0.0",
#     "sphinxcontrib-serializinghtml==2.0.0",
#     "sqlalchemy==2.0.38",
#     "tabulate==0.9.0",
#     "tomli==2.2.1 ; python_full_version < '3.11'",
#     "torch==2.7.1 ; sys_platform == 'darwin'",
#     "torch==2.7.1+cpu ; sys_platform != 'darwin' and sys_platform != 'linux'",
#     "torch==2.7.1+cu128 ; sys_platform == 'linux'",
#     "triton==3.3.1 ; sys_platform == 'linux'",
#     "virtualenv==20.31.2",
#     "wheel==0.45.1",
#     "torch==2.7.1+cpu ; sys_platform != 'darwin'",
#     "astropy==7.1.0",
#     "astropy-iers-data==0.2025.7.28.0.41.50",
#     "pyerfa==2.0.1.5",
#     "torch==2.7.1 ; (python_full_version >= '3.14' and platform_machine == 'AMD64' and sys_platform == 'darwin') or (python_full_version >= '3.14' and platform_machine == 'WIN32' and sys_platform == 'darwin') or (python_full_version >= '3.14' and platform_machine == 'aarch64' and sys_platform == 'darwin') or (python_full_version >= '3.14' and platform_machine == 'amd64' and sys_platform == 'darwin') or (python_full_version >= '3.14' and platform_machine == 'ppc64le' and sys_platform == 'darwin') or (python_full_version >= '3.14' and platform_machine == 'win32' and sys_platform == 'darwin') or (python_full_version >= '3.14' and platform_machine == 'x86_64' and sys_platform == 'darwin') or (platform_machine != 'AMD64' and platform_machine != 'WIN32' and platform_machine != 'aarch64' and platform_machine != 'amd64' and platform_machine != 'ppc64le' and platform_machine != 'win32' and platform_machine != 'x86_64' and sys_platform == 'darwin')",
#     "torch==2.7.1+cpu ; (python_full_version < '3.14' and platform_machine == 'AMD64') or (python_full_version < '3.14' and platform_machine == 'WIN32') or (python_full_version < '3.14' and platform_machine == 'aarch64') or (python_full_version < '3.14' and platform_machine == 'amd64') or (python_full_version < '3.14' and platform_machine == 'ppc64le') or (python_full_version < '3.14' and platform_machine == 'win32') or (python_full_version < '3.14' and platform_machine == 'x86_64') or sys_platform != 'darwin'",
# ]
# ///
"""Install kernels for Jupyter.

The script installs an IPython kernel and a bash kernel from whatever Python
interpreter was invoked. Because dependencies are defined, a "tool" manager
(e.g. `pipx` or `uv`) will install these dependencies in an isolated environment
before running the script from that envrionment.
"""
from argparse import ArgumentParser

import bash_kernel.install
from ipykernel import kernelspec

if __name__ == "__main__":
    # install an ipython kernel
    app = kernelspec.InstallIPythonKernelSpecApp()
    app.initialize()
    app.start()
    argv = app.argv
    # install a bash kernel, from a subset of the same arguments
    parser = ArgumentParser()
    parser.add_argument("--user", action="store_true")
    parser.add_argument("--prefix", action="store_true")
    parser.add_argument("--sys-prefix")
    _, unknown = parser.parse_known_args(argv)
    argv = [i for i in argv if i not in unknown]
    bash_kernel.install.main(argv)
