fail_fast: true
repos:
  # - repo: meta
  #   hooks:
  #     - id: identity
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: check-vcs-permalinks
      - id: destroyed-symlinks
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.8.0
    hooks:
      - id: uv-lock
      - id: uv-export
        name: export-kernel-dependencies
        args: [ -q, --group, notebooks, --group, kernel, -o, requirements.txt ]
        files: ^uv\.lock$
      - id: uv-export
        name: export-docker-dependencies
        args: [ -q, --group, notebooks, --group, docker, -o, docker/requirements.txt ]
        files: ^uv\.lock$
  # FIXME don't know how to do this with md:myst
  # - repo: https://github.com/astral-sh/ruff-pre-commit
  #   rev: v0.11.10
  #   hooks:
  #     - id: ruff
  #       args: ["--fix", "--exit-non-zero-on-fix"]
  #       # prefer to lint the ipynbs
  #       exclude: ^(book/src/.*\.py|.*/oci_ocssw_install.ipynb)$  # FIXME: the bash one
  #     - id: ruff-format
  #       # prefer to format the ipynbs
  #       exclude: ^(book/src/.*\.py|.*/oci_ocssw_install.ipynb)$  # FIXME: the bash one
  - repo: local
    hooks:
      - id: update-setup-py
        name: update-setup-py
        description: Embed the dependencies (with extra "kernel") in the metadata of book/setup.py.
        language: system
        entry: uv add --script book/setup.py -r
        files: ^requirements\.txt$
      - id: repo2docker-requirements
        name: repo2docker-requirements
        # FIXME: updates pyproject.toml "constraints" group, rm docker/requirements.in
        description: Generate docker/requirements.in with prerequisites from repo2docker.
        stages: [ manual ]
        language: python
        additional_dependencies:
          - "jupyter-repo2docker @ git+https://github.com/jupyterhub/repo2docker@5d3a946b24608f1856218eb89861d552e9b826af"
        pass_filenames: false
        entry: repo2docker --Repo2Docker.platform=linux/amd64 --volume docker/requirements.in:./out docker sh -c "pip list --format=freeze > out"
        files: ^docker/environment\.yml$
